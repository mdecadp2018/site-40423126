{"pages":[{"title":"About","text":"2018 Fall 分組網誌 課程倉儲: https://github.com/mdecourse/2018fall 課程投影片: https://mdecourse.github.io/2018fall/reveal 課程網誌: https://mdecourse.github.io/2018fall/blog","tags":"misc","url":"./pages/about/"},{"title":"第八周(2018.11.02)","text":"課程重點:整合內容、迎戰期中","tags":"Misc","url":"./2018-11-02.html"},{"title":"第七周(2018.10.25)","text":"課程重點:乙太網路的IP 設定IPV4、6 ◆IPV4 DNS伺服器(140.130.17.3、140.130.1.2) ◆IPV6 機械設計工程系(2001:288:6004:1::2) ◆IPV6 國立虎尾科技大學(2001:288:6004:1::2) ◆IPV6 hinet(2001:b000:168::1) 一般IPV6共有八區。 雙冒號→代表中間區號皆為0 Onshpe專區","tags":"Misc","url":"./2018-10-25.html"},{"title":"第六周(2018.10.19)","text":"課程重點:統整Onshape Lesson重點 Github Issue ◆在個人的github issue 上放入影片上傳的網址連結。 ◆統整重點 秘笈 處，有每周Onshape的重點，還有附圖說明哦！ Onshpe專區 1.","tags":"Misc","url":"./2018-10-19.html"},{"title":"第五周(2018.10.12)","text":"課程重點:Git版本更新 版本更新 Git版本載點 ，放到資料夾(p37/data/git)並取代原有的檔案，即可完成更新。 ◆git version→檢查現在的Git版本(最新為2.19) Onshpe專區 ★上課內容★ 為Onshape Lesson2-1的三個圖 1. 2.","tags":"Misc","url":"./2018-10-12.html"},{"title":"第四周(2018.10.05)","text":"課程重點:練習Onshape Lesson Onshape lesson1-1 ★上課內容★ Onshpe專區 1.","tags":"Misc","url":"./2018-10-05.html"},{"title":"第三周(2018.09.28)","text":"課程重點:Git版本的控制 Git指令 ◆git status→可查看commit記錄 ◆git log→可列出歷史commit記錄 ◆git checkout (7位數編號)→可回到該版本 Onshpe專區 1. 2.","tags":"Misc","url":"./2018-09-28.html"},{"title":"第二周(2018.09.21)","text":"課程重點:Blog部落格的產生 Blog編輯 ◆將個人網站clone下來後進入資料夾(/config/pelican.leo)，即可從LEO編輯器上撰寫部落格內容。 local鍵是將資料上傳到近端→可先檢查有無出現錯誤 github鍵是將資料送上遠端→再搭配push指令即可從HTTP網址來查看 Onshpe專區 因為沒有拍片故放上結果圖。 HW2 進入Onshape圖檔","tags":"Misc","url":"./2018-09-21.html"},{"title":"第一周(2018.09.14)","text":"課程重點:建立個人的課程網頁 前置作業 可從 課程網站 裡查詢每周進度，以下圖片為點入連結後所進入的頁面(紅色框框為onshape的課程及作業內容、綠色框框為github issue的每周上課內容) 之後再登入Github帳號領取期中作業，建立 個人的課程網頁 。 投影片編輯 ◆將個人網站clone下來後進入資料夾(/config/reveal.leo)，即可從LEO編輯器上撰寫投影片內容。 網誌編輯 ◆利用python wsgi.py指令編輯靜態網頁(藍色底線為該網誌的網址)，當ctrl+C退出環境後，即無法再編輯。 Onshpe專區 1. 2.","tags":"Misc","url":"./2018-09-14.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"./2018-Fall-Project-Blog.html"}]}